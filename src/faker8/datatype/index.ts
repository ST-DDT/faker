// This file is generated by `pnpm run generate:some-script`

import { bindModule } from '../bind';
import type { FakerCore } from '../fakerCore';
import { fakerCore } from '../fakerCore';
import { fakerNumber, numberFn } from './number';

/**
 * The functions of the datatype module.
 */
export const datatypeFns = {
  number: numberFn,
};

/**
 * The datatype module.
 */
export type Datatype = {
  /**
   * Returns a single random number in the given range.
   * The bounds are inclusive.
   *
   * @param options Maximum value or options object.
   * @param options.min Lower bound for generated number. Defaults to `0`.
   * @param options.max Upper bound for generated number. Defaults to `min + 99999`.
   *
   * @throws When options define `max < min`.
   *
   * @example
   * faker.datatype.number() // 55422
   * faker.datatype.number(100) // 52
   * faker.datatype.number({ min: 1000000 }) // 1031433
   * faker.datatype.number({ max: 100 }) // 42
   * faker.datatype.number({ min: 10, max: 100}) // 36
   *
   * @since 8.0.0
   */
  number: typeof fakerNumber;
};

/**
 * Creates a new datatype module that is bound to the given faker core.
 *
 * @param fakerCore The faker core to bind the module to.
 */
export function bindDatatypeModule(fakerCore: FakerCore): Datatype {
  return bindModule<FakerCore, Datatype>(fakerCore, datatypeFns);
}

// Either
export const fakerDatatype: Datatype = bindDatatypeModule(fakerCore);
// Or
export const fakerDatatype2: Datatype = { number: fakerNumber };
